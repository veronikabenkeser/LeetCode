/*
Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Example:
Given a binary tree 
          1
         / \
        2   3
       / \     
      4   5    
Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].

Note: The length of path between two nodes is represented by the number of edges between them.
*/

public class Solution {
    int max=0;
    
    public int diameterOfBinaryTree(TreeNode root) {
       getDiam(root);
       return max;
    }
    
    public int getDiam(TreeNode root){
         if(root == null || (root.left == null&& root.right == null)){
            return 0;
        }
        int diamLeft = getDiam(root.left);
        int diamRight = getDiam(root.right);
        
        int option1 = 0;
        if(root.left != null && root.right != null){
            option1 = 2 + diamLeft+diamRight;
        }
        int option2 = 1+ Math.max(diamLeft, diamRight);
        max = Math.max(max, Math.max(option1,option2));
        return option2;
    }
}
