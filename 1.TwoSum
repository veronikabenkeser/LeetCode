Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

public class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        int[] res = new int[2];
        HashMap<Integer, ArrayList<Integer>> hm = new HashMap<Integer, ArrayList<Integer>>();
        for(int i=0; i<nums.length; i++){
            if(hm.get(nums[i]) == null){
                ArrayList<Integer> temp = new ArrayList<Integer>();
                temp.add(i);
                hm.put(nums[i],temp);
            } else {
                ArrayList<Integer> list = hm.get(nums[i]);
                list.add(i);
                
            }
        }
        
        for(int i: hm.keySet()){
            
            if(hm.get(target - i) != null && target - i != i){
                res[0]=hm.get(i).get(0);
                res[1]=hm.get(target-i).get(0);
            } else if(hm.get(target - i) != null){
                if(hm.get(target-i).size()>1){
                    res[0]=hm.get(i).get(0);
                    res[1]=hm.get(i).get(1);
                }
                
            }
        }
        return res;
    }
}
